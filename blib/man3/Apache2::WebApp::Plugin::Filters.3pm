.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Apache2::WebApp::Plugin::Filters 3"
.TH Apache2::WebApp::Plugin::Filters 3 "2009-12-19" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Apache2::WebApp::Plugin::Filters \- Plugin providing data filtering methods
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  my $obj = $c->plugin('Filters')->method( ... );     # Apache2::WebApp::Plugin::Filters->method()
.Ve
.PP
.Vb 1
\&    or
.Ve
.PP
.Vb 1
\&  $c->plugin('Filters')->method( ... );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Common methods for filtering \s-1HTTP\s0 request parameters.
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
This package is part of a larger distribution and was \s-1NOT\s0 intended to be used 
directly.  In order for this plugin to work properly, the following packages
must be installed:
.PP
.Vb 3
\&  Apache2::WebApp
\&  HTML::StripScripts::Parser
\&  Params::Validate
.Ve
.SH "INSTALLATION"
.IX Header "INSTALLATION"
From source:
.PP
.Vb 5
\&  $ tar xfz Apache2-WebApp-Plugin-Filters-0.X.X.tar.gz
\&  $ perl MakeFile.PL PREFIX=~/path/to/custom/dir LIB=~/path/to/custom/lib
\&  $ make
\&  $ make test     <--- Make sure you do this before contacting me
\&  $ make install
.Ve
.PP
Perl one liner using \s-1CPAN\s0.pm:
.PP
.Vb 1
\&  perl -MCPAN -e 'install Apache2::WebApp::Plugin::Filters'
.Ve
.PP
Use of \s-1CPAN\s0.pm in interactive mode:
.PP
.Vb 3
\&  $> perl -MCPAN -e shell
\&  cpan> install Apache2::WebApp::Plugin::Filters
\&  cpan> quit
.Ve
.PP
Just like the manual installation of Perl modules, the user may need root access during
this process to insure write permission is allowed within the installation directory.
.SH "OBJECT METHODS"
.IX Header "OBJECT METHODS"
.Sh "encode_url"
.IX Subsection "encode_url"
Encode \s-1URL\s0 to \s-1ASCII\s0.
.PP
.Vb 1
\&  my $ascii = $c->plugin('Filters')->encode_url($url);
.Ve
.Sh "decode_url"
.IX Subsection "decode_url"
Decode \s-1ASCII\s0 to \s-1URL\s0.
.PP
.Vb 1
\&  my $url = $c->plugin('Filters')->decode_url($url);
.Ve
.Sh "strip_domain_alias"
.IX Subsection "strip_domain_alias"
Remove the subdomain (alias) from a domain name.
.PP
.Vb 1
\&  my $result = $c->plugin('Filters')->strip_domain_alias($domain);
.Ve
.Sh "strip_html"
.IX Subsection "strip_html"
Remove all \s-1HTML\s0 tags and attributes.
.PP
.Vb 1
\&  my $result = $c->plugin('Filters')->strip_html($markup);
.Ve
.Sh "untaint_html"
.IX Subsection "untaint_html"
Remove restricted \s-1HTML\s0 tags and attributes.
.PP
.Vb 1
\&  my $result = $c->plugin('Filters')->untaint_html($markup);
.Ve
.PP
Supported tags:
.PP
.Vb 3
\&  a blockquote br dd dl div em font form img input hr h1 h2 h3 h4 h5 h6
\&  label legend li ol option p pre ul script select small span strong style
\&  table tbody tfoot thead tr td
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Apache2::WebApp, Apache2::WebApp::Plugin, HTML::StripScripts::Parser
.SH "AUTHOR"
.IX Header "AUTHOR"
Marc S. Brooks, <mbrooks@cpan.org> \- <http://mbrooks.info>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
